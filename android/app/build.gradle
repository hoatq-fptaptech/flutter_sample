def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    def propertiesVersionCode = findProperty("versionCode")
    if(propertiesVersionCode != null){
        flutterVersionCode = propertiesVersionCode
    }else{
    flutterVersionCode = '1'
    }
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    def propertiesVersionName = findProperty("versionName")
    if(propertiesVersionName != null){
        flutterVersionName = propertiesVersionName
    }else{
    flutterVersionName = '1.0'
    }
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

apply plugin: 'com.android.application'
// START: FlutterFire Configuration
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
// END: FlutterFire Configuration
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 34

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        disable 'InvalidPackage'
        checkReleaseBuilds false
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.vmo.c3FlutterTemp"
        minSdkVersion 21
        targetSdkVersion 34
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    // signingConfigs {
    //    release {
    //        keyAlias keystoreProperties['keyAlias']
    //        keyPassword keystoreProperties['keyPassword']
    //        storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
    //        storePassword keystoreProperties['storePassword']
    //    }
    // }

    buildTypes {
        release {
            signingConfig signingConfigs.debug
        }
    }

    flavorDimensions "default"
    productFlavors {
        dev {
            applicationIdSuffix ".dev"
            versionNameSuffix = "-dev"
            resValue "string", "app_name", "App Name Dev"
        }
        staging {
            applicationIdSuffix ".staging"
            versionNameSuffix = "-stg"
            resValue "string", "app_name", "App Name Stag"
        }
        production {
            resValue "string", "app_name", "App Name"
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
